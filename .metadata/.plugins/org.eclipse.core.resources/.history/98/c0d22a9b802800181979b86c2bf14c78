package com.example.nathan.trainstationserver;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.InetSocketAddress;

import com.sun.net.httpserver.*;

public class Main {

	static Runtime runtime;
	
	public static void main(String[] args) {
		runtime = java.lang.Runtime.getRuntime();
		mainRun();
}
	
	private static void mainRun() { 
		try {
			HttpServer server = HttpServer.create(new InetSocketAddress(9090),0);
		createContext("/", server, slashContent());
		createContext("/stats", server, statsContent());
		createContext("/dir", server, dirContent());
			
		server.start(); 
		System.out.println("Starting...");
		} catch (IOException e) {
		System.err.println("Problem starting webserver "+ e);
			e.printStackTrace();
		}
	}
	
	private static String slashContent() { 
		String output = "<html><head></head><body><h1>I'm a working we server</h1></body></html>"; 
		return output;
	}
	
	
	public static String statsContent() { 
		
		
		String output = "<html><head></head><body><h1>Number of CPU Cores in use = "+ runtime.availableProcessors() +""
				+ " The Total Memory is" + runtime.totalMemory()+" and the free memory is"+runtime.freeMemory()+"</h1></body></html>"; 
		return output;
	}
	
	private static String dirContent() { 
		String output = "<html><head></head><body><h1>I'm a working we server</h1></body></html>"; 
		return output;
	}
	
	private static void createContext(String context, HttpServer server, String content) { 
		server.createContext("context",new HttpHandler() {

			@Override
			public void handle(HttpExchange he) throws IOException {
				BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(he.getResponseBody()));
				System.out.println("Processing Request");
				
				he.sendResponseHeaders(200, 0);
				String output = content;
				bw.write(output);
				bw.close();
			}
			
		});
	}
	
	
}
